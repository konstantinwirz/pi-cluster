- name: Set up cluser-wide configuration
  hosts: cluster
  become: true

  handlers:
    - name: Restart pi
      ansible.builtin.reboot:

  vars_files:
    - config.yaml

  tasks:
    - name: Ping cluster nodes
      ansible.builtin.ping:

    - name: Check if cgroups are enabled
      ansible.builtin.shell: cat /boot/firmware/cmdline.txt
      register: cmdline_content

    - name: Enable cgroups
      command: sed -i -e 's/$/ cgroup_memory=1 cgroup_enable=memory/' /boot/firmware/cmdline.txt
      when: "'cgroup_memory=1 cgroup_enable=memory' not in cmdline_content.stdout"
      notify:
        - Restart pi

    - name: Install open-iscsi
      become: true
      ansible.builtin.apt: 
        name: open-iscsi

    - name: Check if search domain is set to 'fritz.box'
      ansible.builtin.shell: cat /etc/resolv.conf
      register: resolv_conf_content

    - name: Set search domain to 'local'
      ansible.builtin.shell: |
        printf "[main]\ndhcp=dhclient\n" > /etc/NetworkManager/conf.d/dhcp-client.conf
        printf '\nsupersede domain-search "local";\n' >> /etc/dhcp/dhclient.conf
        systemctl restart NetworkManager
      when: "'search fritz.box' in resolv_conf_content.stdout"

- name: Set up k3s master node
  hosts: master
  gather_facts: false
  become: true

  vars_files:
    - config.yaml

  tasks:

    - name: Install k3s
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="{{ k3s_version }}" INSTALL_K3S_EXEC="server --disable=servicelb" K3S_KUBECONFIG_MODE="644" sh -

    - name: Configure traefik
      kubernetes.core.k8s:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        definition:
          apiVersion: helm.cattle.io/v1
          kind: HelmChartConfig
          metadata:
            name: traefik
            namespace: kube-system
          spec:
            valuesContent: |-
              service:
                spec:
                  loadBalancerIP: "{{ traefik_loadbalancer_ip }}"
              ports:
                websecure:
                  tls:
                    enabled: true
                web:
                  redirectTo:
                    port: websecure
  
    - name: Get k3s node
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      changed_when: false
      register: k3s_token_output

    - name: Set k3s_token fact
      ansible.builtin.set_fact:
        k3s_token: "{{ k3s_token_output.stdout_lines[0] }}"

    - name: Install required dependencies
      ansible.builtin.package:
        name:
          - python3-pip
          - python3-kubernetes
          - git
        state: present

- name: Set up k3s worker nodes
  hosts: workers
  gather_facts: false
  become: true

  vars_files:
    - config.yaml

  tasks:
    - name: Install k3s on worker nodes
      ansible.builtin.shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="{{ k3s_version }}" K3S_URL="https://{{ hostvars['pi1']['ansible_default_ipv4']['address'] }}:6443" K3S_TOKEN="{{ hostvars[groups['master'][0]]['k3s_token'] }}" sh -

- name: Set up Helm
  import_playbook: playbooks/helm.yaml
  vars:
    helm_hosts: master
  tags: ['helm']

- name: Set up cert-manager
  import_playbook: playbooks/cert-manager.yaml
  tags: ['cert-manager']

- name: Set up MetalLB
  import_playbook: playbooks/metallb.yaml
  tags: ['metallb']

- name: Set up Longhorn
  import_playbook: playbooks/longhorn.yaml
  tags: ['longhorn']

- name: Set up PiHole
  import_playbook: playbooks/pihole.yaml
  tags: ['pihole']
